@using MvcStudenti2.Models

@model Student

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
</head>
<body>
    <div>
        <h2>@ViewBag.Title    @Model.Ime   @Model.Prezime</h2>
        @using (Html.BeginForm())
        {
            //@Html.AntiForgeryToken() //generates a hudden form anti-forgery
            //token koji mora odgovarati u Edit metodi od Student kontroler
            @Html.AntiForgeryToken()
            <table>
                <tr>
                    <td>@Html.LabelFor(model => model.Id): </td>
                    <td>@Html.TextBoxFor(model => model.Id, new { disabled = true })</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.Ime):</td>
                    <td>
                        @Html.EditorFor(model => model.Ime)
                        @Html.ValidationMessageFor(model => model.Ime)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.Prezime):</td>
                    <td>
                        @Html.EditorFor(model => model.Prezime)
                        @Html.ValidationMessageFor(model => model.Prezime)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.Spol):</td>
                    <td>
                        @Html.RadioButtonFor(model => model.Spol, 'M') Muški
                        @Html.RadioButtonFor(model => model.Spol, 'F') Ženski
                        @Html.ValidationMessageFor(model => model.Spol)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.Oib):
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Oib)
                        @Html.ValidationMessageFor(model => model.Oib)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.DatumRodenja):</td>
                    <td>
                        @*@Html.TextBoxFor(model => model.DatumRodenja, new {type="date"})*@
                        @Html.EditorFor(model => model.DatumRodenja)
                        @Html.ValidationMessageFor(model => model.DatumRodenja)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.GodinaStudija):</td>
                    <td>
                        @Html.EnumDropDownListFor(model => model.GodinaStudija)
                        @Html.ValidationMessageFor(model => model.GodinaStudija)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.RedovniStudent):</td>
                    <td>
                        @Html.CheckBoxFor(model => model.RedovniStudent)
                        @Html.ValidationMessageFor(model => model.RedovniStudent)
                    </td>
                </tr>
            </table>
            <p>@Html.ValidationSummary(true,"Spremanje nije uspjelo. Popravite potrebne podatke i pokupahte ponovo!")</p>
            //Submit (save) tipka
            <p><input type="submit" value="Spremi"/></p>
            @Html.ActionLink("Povratak na početak bez spremanja", "Popis")
        }
    </div>
</body>
</html>
